/// <reference types="node" />
import { IncomingHttpHeaders } from "http";
import { Readable } from "stream";
import { ApolloServerBase, GraphQLOptions, FileUploadOptions } from "apollo-server-core";
import { NowRequest, NowResponse } from "@vercel/node";
export interface CreateHandlerOptions {
    cors?: {
        origin?: boolean | string | string[];
        methods?: string | string[];
        allowedHeaders?: string | string[];
        exposedHeaders?: string | string[];
        credentials?: boolean;
        maxAge?: number;
    };
    uploadsConfig?: FileUploadOptions;
    onHealthCheck?: (req: NowRequest) => Promise<any>;
}
export declare class FileUploadRequest extends Readable {
    headers: IncomingHttpHeaders;
}
export declare class ApolloServer extends ApolloServerBase {
    createGraphQLServerOptions(req: NowRequest, res: NowResponse): Promise<GraphQLOptions>;
    protected supportsUploads(): boolean;
    createHandler({ cors, onHealthCheck }?: CreateHandlerOptions): (req: NowRequest, res: NowResponse) => Promise<any>;
}
